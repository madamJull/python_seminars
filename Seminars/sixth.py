# Задача №39. Решение в группах Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке,
# в каком они идут в первом массиве), которых нет во втором массиве. Пользователь вводит число N - количество элементов
# в первом массиве, затем N чисел - элементы массива. Затем число M - количество элементов во втором массиве.
# Затем элементы второго массива
# Ввод:
# 7 -> 3 1 3 4 2 4 12
# 6 -> 4 15 43 1 15 1
# Вывод:
# 3 3 2 12
# 1 вариант
# list_1 = [int(input()) for _ in range(int(input('n: ')))]
# list_2 = [int(input()) for _ in range(int(input('m: ')))]
# print(f'Первый массив: {list_1}')
# print(f'Второй массив: {list_2}')
# list_3 = []
# for elem in list_1:
#     if elem not in list_2:
#         list_3.append(elem)
# print(f'Элементы первого массива, которых нет во втором: {list_3}')

# 2 вариант (оптимальный)
# list_1 = [int(input()) for _ in range(int(input('n: ')))]
# list_2 = [int(input()) for _ in range(int(input('m: ')))]
# print(f'Первый массив: {list_1}')
# print(f'Второй массив: {list_2}')
# set_3 = set(list_2)
# for elem in list_1:
#     if elem not in set_3:
#         print(elem)

# 41. Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит количество элементов,
# у которых два соседних и, при этом, оба соседних элемента меньше данного. Сначала вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив состоит из целых чисел.
# 5 -> 1 2 3 4 5 -> 0
# 5 -> 1 5 1 5 1 -> 2

# list_1 = [int(input()) for _ in range(int(input('n: ')))]
# print(list_1)
# count = 0
# for i in range(1, len(list_1)-1):
#     if list_1[i-1] < list_1[i] > list_1[i + 1]:
#         count += 1
# print(count)


# 43. Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые два элемента, равные друг
# другу образуют одну пару, которую необходимо посчитать. Вводится список чисел. Все числа списка находятся на разных строках.
# 1 2 3 2 3 -> 2

# list_1 = [int(input()) for _ in range(int(input('n: ')))]
# print(list_1)
# count_dict = {}
# for elem in list_1:
#     if count_dict.get(elem): # если в словаре есть ключ с таким значением, перезапиши сам ключ с увеличением на 1
#         count_dict[elem] += 1
#     else:
#         count_dict[elem] = 1 # если в словаре нет ключа с таким значением, присвой ключу номер 1
# count = 0
# for value in count_dict.values():
#     count += value // 2
# print(count)

# 45. Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n (включая 1, но исключая само n)
# равна числу m и наоборот. Например, 220 и 284 – дружественные числа. По данному числу k выведите все пары дружественных чисел,
# каждое из которых не превосходит k. Программа получает на вход одно натуральное число k, не превосходящее 105.
# Программа должна вывести  все пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить по одной в строке,
# разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).
# 300 -> 220 284

# def sum_div(n):
#     summa = 0
#     for i in range(1, n // 2 + 1):
#         if n % i == 0:
#             summa += i
#     return summa
# summ_dict = {} # 284: 220,
# k = int(input('k: '))
# for number in range(2, k + 1):
#     if number in summ_dict:
#         if sum_div(number) == summ_dict[number]:
#             print(number, summ_dict[number])
#     summ_dict[sum_div(number)] = number

# Д/З

# Задача 30: Заполните массив элементами арифметической прогрессии. Её первый элемент, разность и количество элементов нужно ввести
# с клавиатуры. Формула для получения n-го члена прогрессии: an = a1 + (n-1) * d. Каждое число вводится с новой строки.

# n = int(input('кол-во элементов прогрессии: '))
# a = int(input('первый элемент: '))
# d = int(input('разность: '))
# list_1 = []
# for elem in range(n):
#     list_1.append(a + elem * d)
# print(list_1)

# Задача 32: Определить индексы элементов массива (списка), значения которых принадлежат заданному диапазону
# (т.е. не меньше заданного минимума и не больше заданного максимума)

list_1 = [2, 4, 8, 12, 5, 43, 7, 19]
print(list_1)
list_1.sort()
min_num = int(input('min: '))
max_num = int(input('max: '))
for i in range(len(list_1)):
    if min_num <= list_1[i] <= max_num:
        print(list_1[i], end = ' ')




